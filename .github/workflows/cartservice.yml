name: Cartservice CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: "cartservice"
      SERVICE_PATH: "./src/cartservice/src"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin' 

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install dependencies
        working-directory: ${{ env.SERVICE_PATH }}
        run: dotnet restore

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH  

      - name: SonarQube Scan
        working-directory: ${{ env.SERVICE_PATH }}
        run: |
          dotnet sonarscanner begin \
            /k:"microservices-demo-cartservice" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ secrets.SONAR_AUTH_TOKEN }}"
          dotnet build
          dotnet sonarscanner end \
            /d:sonar.login="${{ secrets.SONAR_AUTH_TOKEN }}"

  build-and-publish:
    name: Build and Publish Docker Image
    needs: sonarqube
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: "cartservice"
      SERVICE_PATH: "./src/cartservice/src"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} ${{ env.SERVICE_PATH }}

      - name: Run Trivy Security Scan
        env:
          TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db"
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db"
        run: |
          docker pull public.ecr.aws/aquasecurity/trivy:latest
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e TRIVY_DB_REPOSITORY="${{ env.TRIVY_DB_REPOSITORY }}" \
            -e TRIVY_JAVA_DB_REPOSITORY="${{ env.TRIVY_JAVA_DB_REPOSITORY }}" \
            public.ecr.aws/aquasecurity/trivy:latest image \
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --severity HIGH,CRITICAL

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SERVICE_NAME }}:latest

      - name: Clean up Workspace
        if: always()
        run: |
          rm -rf ${{ env.SERVICE_PATH }}
